import React, { useEffect, useRef, useState } from "react";
import { Volume2, VolumeX } from "lucide-react";

const BackgroundMusic = () => {
  const [isPlaying, setIsPlaying] = useState(false);
  const [userInteracted, setUserInteracted] = useState(false);
  const audioRef = useRef(null);

  useEffect(() => {
    const audio = audioRef.current;
    if (!audio) return;

    // ‚ö° Preload nh·∫°c tr∆∞·ªõc ƒë·ªÉ tr√°nh delay khi click
    const preload = new Audio("/music/ido.mp3");
    preload.preload = "auto";
    preload.load();

    audio.volume = 0.7;

    const enablePlay = () => {
      audio.play().then(() => {
        setIsPlaying(true);
        setUserInteracted(true);
      }).catch((err) => {
        console.warn("‚ö†Ô∏è Autoplay b·ªã ch·∫∑n:", err);
      });
    };

    document.addEventListener("click", enablePlay, { once: true });
    document.addEventListener("touchstart", enablePlay, { once: true });

    return () => {
      document.removeEventListener("click", enablePlay);
      document.removeEventListener("touchstart", enablePlay);
    };
  }, []);

  const togglePlay = () => {
    const audio = audioRef.current;
    if (!audio) return;

    if (isPlaying) {
      audio.pause();
      setIsPlaying(false);
    } else {
      audio.play().then(() => setIsPlaying(true));
    }
  };

  return (
    <>
      {/* Nh·∫°c n·ªÅn */}
      <audio
        ref={audioRef}
        loop
        preload="auto"
        playsInline
        src="/music/ido.mp3"
      />

      {/* N√∫t b·∫≠t/t·∫Øt nh·∫°c */}
      {userInteracted && (
        <button
          onClick={togglePlay}
          className="fixed bottom-5 right-5 z-50 bg-white/80 p-3 rounded-full shadow-lg hover:bg-white transition"
          title={isPlaying ? "T·∫Øt nh·∫°c" : "B·∫≠t nh·∫°c"}
        >
          {isPlaying ? (
            <Volume2 className="text-pink-600" size={24} />
          ) : (
            <VolumeX className="text-gray-500" size={24} />
          )}
        </button>
      )}

      {/* N·∫øu ch∆∞a t∆∞∆°ng t√°c l·∫ßn n√†o, hi·ªÉn th·ªã n√∫t ‚ÄúB·∫Øt ƒë·∫ßu nh·∫°c‚Äù */}
      {!userInteracted && (
        <button
          onClick={() => {
            const audio = audioRef.current;
            if (!audio) return;
            audio.play()
              .then(() => {
                setUserInteracted(true);
                setIsPlaying(true);
              })
              .catch((err) => console.warn("Kh√¥ng th·ªÉ ph√°t nh·∫°c:", err));
          }}
          className="fixed bottom-5 right-5 z-50 bg-pink-500 text-white p-3 rounded-full shadow-lg animate-bounce hover:bg-pink-600 transition"
        >
          B·∫≠t nh·∫°c üéµ
        </button>
      )}
    </>
  );
};

export default BackgroundMusic;
